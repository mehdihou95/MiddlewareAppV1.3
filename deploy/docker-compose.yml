version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:4.1.0-management
    hostname: fbb15fda1f36
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
      - RABBITMQ_LOAD_DEFINITIONS=true
    volumes:
      - ./docker/rabbitmq/definitions.json:/etc/rabbitmq/definitions.json
      - ./docker/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - middleware_net

  redis:
    image: redis:7.2
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - middleware_net

  db:
    image: postgres:17
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_DB=middleware_config
      - POSTGRES_USER=middleware_user
      - POSTGRES_PASSWORD=secure_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/setup-database.sql:/docker-entrypoint-initdb.d/setup-database.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U middleware_user -d middleware_config"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - middleware_net

  prometheus:
    image: prom/prometheus:v2.45.0
    ports:
      - "9090:9090"
    volumes:
      - ./docker/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - middleware_net

  grafana:
    image: grafana/grafana:10.2.0
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - middleware_net

networks:
  middleware_net:
    driver: bridge

volumes:
  postgres_data:
  redis_data: 