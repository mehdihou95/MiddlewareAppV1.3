# Shared Database Configuration
spring:
  datasource:
    url: jdbc:h2:file:./data/middleware;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password: 
    driver-class-name: org.h2.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      connection-timeout: 20000
      max-lifetime: 1200000
  
  # JPA Configuration
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.H2Dialect
        jdbc:
          batch_size: 30
          batch_versioned_data: true
        order_inserts: true
        order_updates: true
        generate_statistics: ${HIBERNATE_STATS:false}
        cache:
          use_second_level_cache: true
          use_query_cache: true
          region.factory_class: org.hibernate.cache.ehcache.EhCacheRegionFactory
        session:
          events:
            log: false
  
  # Resilience4j Configuration
  resilience4j:
    thread-pool-bulkhead:
      configs:
        default:
          core-thread-pool-size: 4
          max-thread-pool-size: 8
          queue-capacity: 100
          keep-alive-duration: 20ms
      instances:
        repository:
          base-config: default
          core-thread-pool-size: 2
          max-thread-pool-size: 4
          queue-capacity: 50
    circuitbreaker:
      configs:
        default:
          failure-rate-threshold: 50
          wait-duration-in-open-state: 10000
          permitted-number-of-calls-in-half-open-state: 10
          sliding-window-size: 100
          sliding-window-type: COUNT_BASED
          minimum-number-of-calls: 10
    timelimiter:
      configs:
        default:
          timeout-duration: 2s
          cancel-running-future: true
  
  # Flyway Configuration
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    baseline-version: 0
    clean-disabled: true
  
  # Redis Configuration
  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASSWORD:}
    database: 0
    timeout: 5000
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0
        max-wait: -1
  
  # Session Configuration
  session:
    store-type: redis
    redis:
      namespace: middleware:session
    timeout: 1800  # 30 minutes

  # RabbitMQ Configuration
  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USER:admin}
    password: ${RABBITMQ_PASSWORD:admin}
    listener:
      simple:
        retry:
          enabled: true
          initial-interval: 2000
          max-attempts: 3
          multiplier: 1.5

# Security Configuration
application:
  security:
    jwt:
      secret-key: ${JWT_SECRET_KEY:404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970}
      expiration: 3600000  # 1 hour in milliseconds
      refresh-token:
        expiration: 604800000  # 7 days in milliseconds
    token-blacklist: in-memory

# CORS Configuration
app:
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000}
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS,PATCH
    allowed-headers: Authorization,Content-Type,X-XSRF-TOKEN,X-Requested-With,Accept,Origin,X-Client-ID
    allow-credentials: true

# Common Logging Configuration
logging:
  level:
    root: INFO
    com.middleware: DEBUG
    org.springframework: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/application.log
    max-size: 10MB
    max-history: 7

# Enhanced Actuator and Monitoring Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: always
    metrics:
      enabled: true
    prometheus:
      enabled: true
  metrics:
    distribution:
      percentiles-histogram:
        http.server.requests: true
    tags:
      application: ${spring.application.name:middleware}
    export:
      prometheus:
        enabled: true
        step: 1m
        descriptions: true
  health:
    defaults:
      enabled: true
    rabbitmq:
      enabled: true
    db:
      enabled: true
    diskspace:
      enabled: true
      path: ${user.dir}
      threshold: 10MB
    ping:
      enabled: true
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true

# File Storage Configuration
file:
  storage:
    directory: ./data/files
    max-size: 10485760
    allowed-extensions: xml,json,txt
    compression:
      enabled: true
      level: 6 