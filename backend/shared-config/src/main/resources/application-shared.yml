# Shared Database Configuration
spring:
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5433}/${DB_NAME:middleware_config}
    username: ${DB_USER:middleware_user}
    password: ${DB_PASSWORD:secure_password}
    driver-class-name: org.postgresql.Driver
  
  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
  
  # Resilience4j Configuration
  resilience4j:
    thread-pool-bulkhead:
      configs:
        default:
          core-thread-pool-size: 4
          max-thread-pool-size: 8
          queue-capacity: 100
          keep-alive-duration: 20ms
      instances:
        repository:
          base-config: default
          core-thread-pool-size: 2
          max-thread-pool-size: 4
          queue-capacity: 50
  
  # Flyway Configuration
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    baseline-version: 0
    clean-disabled: true
  
  # Redis Configuration
  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASSWORD:}
  
  # Session Configuration
  session:
    store-type: redis
    redis:
      namespace: middleware:session
    timeout: 1800  # 30 minutes

  # RabbitMQ Configuration
  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USER:admin}
    password: ${RABBITMQ_PASSWORD:admin}
    listener:
      simple:
        retry:
          enabled: true
          initial-interval: 2000
          max-attempts: 3
          multiplier: 1.5

# Security Configuration
application:
  security:
    jwt:
      secret-key: ${JWT_SECRET_KEY:404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970}
      expiration: 3600000  # 1 hour in milliseconds
      refresh-token:
        expiration: 604800000  # 7 days in milliseconds
    token-blacklist: in-memory

# CORS Configuration
app:
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000}
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS,PATCH
    allowed-headers: Authorization,Content-Type,X-XSRF-TOKEN,X-Requested-With,Accept,Origin,X-Client-ID
    allow-credentials: true

# Common Logging Configuration
logging:
  level:
    root: INFO
    com.middleware: DEBUG
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/application.log
    max-size: 10MB
    max-history: 7

# Common Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when_authorized
      roles: ADMIN
    prometheus:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name:middleware}
    export:
      prometheus:
        enabled: true
  health:
    defaults:
      enabled: true
    rabbitmq:
      enabled: true
    db:
      enabled: true 